(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{"./docs/1_home.mdx":function(e,a,n){"use strict";n.r(a),n.d(a,"exampleSrc",function(){return r}),n.d(a,"default",function(){return i});var t=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(n("react"),n("./node_modules/@mdx-js/react/dist/index.es.js")),r="/axios-last/public/example.gif";"undefined"!==typeof r&&r&&r===Object(r)&&Object.defineProperty(r,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"exampleSrc",filename:"docs/1_home.mdx"}});var o={exampleSrc:r},c="wrapper";function i(e){var a=e.components,n=Object(t.a)(e,["components"]);return Object(s.a)(c,Object.assign({},o,n,{components:a,mdxType:"MDXLayout"}),Object(s.a)("h2",{id:"why-axios-last"},"Why axios-last"),Object(s.a)("p",null,"Once you are seeking for a solution that only take the last value from multiple axios calls, ",Object(s.a)("inlineCode",{parentName:"p"},"Rx.js")," might be good choice."),Object(s.a)("p",null,"What if you don't like ",Object(s.a)("inlineCode",{parentName:"p"},"Rx.js"),"? I am right here!!!"),Object(s.a)("p",null,"Let's feel how it helps:"),Object(s.a)("img",{src:r,alt:"example",style:{width:"100%"}}),Object(s.a)("h2",{id:"installation"},"Installation"),Object(s.a)("h3",{id:"yarn"},"yarn"),Object(s.a)("pre",null,Object(s.a)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"yarn add axios-last\n")),Object(s.a)("h3",{id:"npm"},"npm"),Object(s.a)("pre",null,Object(s.a)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install axios-last\n")),Object(s.a)("h2",{id:"usage"},"Usage"),Object(s.a)("pre",null,Object(s.a)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import { create } from 'axios-last'\n\nconst request = create()\n\nfor (let i = 0; i < 3; i++) {\n  request({\n    method: 'GET',\n    url: 'https://test.com/users',\n    params: {\n      name: i\n    }\n  }).then(res => {\n    // only request with name === 2 received\n    // all previous requests were cancelled while subsequent request made\n  })\n}\n")),Object(s.a)("p",null,Object(s.a)("strong",{parentName:"p"},"With AxiosInstance specified")),Object(s.a)("pre",null,Object(s.a)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import axios from 'axios'\nimport { create } from 'axios-last'\n\nconst instance = axios.create({\n  baseURL: 'https://test.api.com'\n})\n\n// you can specify axiosInstance for a reason\nconst request = create(instance)\n\nfor (let i = 0; i < 3; i++) {\n  request({\n    method: 'GET',\n    url: 'https://test.com/users',\n    params: {\n      name: i\n    }\n  }).then(res => {\n    // only request with name === 2 received\n    // all previous requests were cancelled while subsequent request made\n  })\n}\n")))}i&&i===Object(i)&&Object.defineProperty(i,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"docs/1_home.mdx"}}),i.isMDXComponent=!0}}]);